import org.marc4j.marc.Record;
import org.solrmarc.tools.Utils;


// define the base level indexer so that its methods can be called from the script.
// note that the SolrIndexer code will set this value before the script methods are called.
org.solrmarc.index.SolrIndexer indexer = null;

/**
 * Determine Record Format(s)
 *
 * @param  Record          record
 * @return Set     format of record
 */

Set demarcatePublicationDate(Record record)
{
  LinkedHashSet result = new LinkedHashSet();

  String val_raw = indexer.getFirstFieldVal(record, "008");

  String val = val_raw.replace('u', '0');

  Calendar today = Calendar.getInstance();


  Calendar this_year = Calendar.getInstance();
  this_year.add(Calendar.YEAR, -1);

  Calendar one_year_ago = Calendar.getInstance();
  one_year_ago.add(Calendar.YEAR, -2);

  Calendar five_years_ago = Calendar.getInstance();
  five_years_ago.add(Calendar.YEAR, -6);

  Calendar ten_years_ago = Calendar.getInstance();
  ten_years_ago.add(Calendar.YEAR, -11);

  if (val != null)
  {
    try {
      year = Integer.parseInt(val.substring(7,11));

      Calendar acq = Calendar.getInstance();
      acq.set(year,1,1);      


      if (this_year.before(acq)) {
        result.add("This Year");
      }
      if (one_year_ago.before(acq)) {

        result.add("Last Year");
      }

      if (five_years_ago.before(acq)) {

        result.add("Last Five Years");
      }


      if (ten_years_ago.before(acq)) {

        result.add("Last Ten Years");
      } else {
        result.add("Older Than Ten Years");
      }
      
    }
    catch (Exception e)
    {
        result.add("Older Than Ten Years");

    }

  }



  return result;
}



Set demarcateAcquistionDate(Record record)
{
  LinkedHashSet result = new LinkedHashSet();

  String val = indexer.getFirstFieldVal(record, "991a");

  Calendar today = Calendar.getInstance();

  Calendar one_week_ago = Calendar.getInstance();
  one_week_ago.add(Calendar.DATE, -7);

  Calendar one_month_ago = Calendar.getInstance();
  one_month_ago.add(Calendar.MONTH, -1);

  Calendar three_months_ago = Calendar.getInstance();
  three_months_ago.add(Calendar.MONTH, -3);

  if (val != null && val.length() == 8)
  {
    year = Integer.parseInt(val.substring(0,4));
    month = Integer.parseInt(val.substring(4,6));
    day = Integer.parseInt(val.substring(6,8));

    Calendar acq = Calendar.getInstance();
    acq.set(year,month,day);      


    if (three_months_ago.before(acq)) {
      result.add("Last 3 Months");
    }
    if (one_month_ago.before(acq)) {

      result.add("Last Month");
    }

    if (one_week_ago.before(acq)) {
      result.add("Last Week");
    }
  }



  return result;
}
